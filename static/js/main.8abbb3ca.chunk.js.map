{"version":3,"sources":["js/aboutme.js","js/elevationScroll.js","js/projects.js","serviceWorker.js","js/landing-info.js","index.js"],"names":["AboutMe","react_default","a","createElement","id","Grid","container","direction","justify","alignItems","item","xs","scrollAnimation_min_default","animateIn","animateOut","duration","className","theme","createMuiTheme","palette","primary","main","blueGradient","ElevationScroll","props","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","cloneElement","elevation","Projects","Card","CardContent","Typography","gutterBottom","variant","component","CardActions","Button","disableRipple","href","size","Boolean","location","hostname","match","LandingInfo","style","width","margin","src","alt","dist_default","cursorClassName","Speed","ms","ReactDOM","render","Fragment","AppBar","background","Toolbar","document","getElementById","js_landing_info","js_aboutme","js_projects","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8abbb3ca.chunk.js","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport '../css/aboutme.css';\n\n\nconst AboutMe = () => (\n    <div id=\"about-me\">\n        {/*ABOUT ME*/}\n        <Grid container direction=\"row\" justify=\"space-around\" alignItems=\"center\">\n\n            <Grid item xs={4}>\n                <ScrollAnimation animateIn='slideInLeft' animateOut='slideOutLeft' duration=\"2\">\n                    <h2 className=\"details\">\n                        <strong>About me.</strong> <br/><br/>\n                        <u>My Work.</u><br/>\n                        I am a [insert] developer from London. I work mainly with python, [&insert lang]. I am\n                        currently\n                        a student at Loughborough University in my second year, studying Computer Science.<br/><br/> To look at my\n                        CV, [click here.].<br/><br/> To have a look at some of my projects, scroll down!\n                        <br/> <br/>\n                    </h2>\n                </ScrollAnimation>\n            </Grid>\n            <Grid item xs={4} className=\"detailsPicture\">\n                <ScrollAnimation animateIn='slideInRight' animateOut='slideOutRight' duration=\"2\">\n                    <h2>\n                        INSERT PICTURE OF MOI HERE\n                        INSERT PICTURE OF MOI HERE\n                        INSERT PICTURE OF MOI HERE\n                        INSERT PICTURE OF MOI HERE\n                        INSERT PICTURE OF MOI HERE\n                        INSERT PICTURE OF MOI HERE\n                        INSERT PICTURE OF MOI HERE\n                    </h2>\n                </ScrollAnimation>\n            </Grid>\n\n        </Grid>\n    </div>\n);\nexport default AboutMe;","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger/useScrollTrigger\";\nimport PropTypes from \"prop-types\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport '../css/elevationScroll.css';\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\n\n\nconst theme = createMuiTheme({\n\n    palette: {\n        primary: {\n            main: '#0052D4',\n            blueGradient: \"linear-gradient(to right, #6FB1FC, #4364F7, #0052D4)\",\n        },\n    },\n});\n\nfunction ElevationScroll(props) {\n    const {children, window} = props;\n    // Note that you normally won't need to set the window ref as useScrollTrigger\n    // will default to window.\n    // This is only being set here because the demo is in an iframe.\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0,\n        target: window ? window() : undefined,\n    });\n\n    return React.cloneElement(children, {\n        elevation: trigger ? 4 : 0,\n    });\n}\n\nElevationScroll.propTypes = {\n    children: PropTypes.node.isRequired,\n    // Injected by the documentation to work in an iframe.\n    // You won't need it on your project.\n    window: PropTypes.func,\n};\nexport default function ElevateAppBar(props) {\n    return (\n        <React.Fragment>\n            <ElevationScroll {...props}>\n                <AppBar className=\"AppBar bg-pan-bottom\" style={{background: theme.palette.primary.blueGradient}}>\n                    <Toolbar>\n                        <Typography className=\"name\" variant=\"h6\">Marcel Mendes</Typography>\n                        <Typography className=\"nav-right\" variant=\"h6\"><a href='#about-me'>About Me</a></Typography>\n                        <Typography className=\"nav-right\" variant=\"h6\"><a href='#projects'>Projects</a></Typography>\n                    </Toolbar>\n                </AppBar>\n            </ElevationScroll>\n            <Toolbar/>\n        </React.Fragment>\n    );\n}","import ScrollAnimation from 'react-animate-on-scroll';\nimport React from \"react\";\nimport Card from '@material-ui/core/Card'\nimport '../css/projects.css';\nimport Grid from \"@material-ui/core/Grid\";\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst Projects = () => (\n    <div id=\"projects\">\n        <ScrollAnimation animateIn='fadeInUp' animateOut='fadeOutDown'>\n            <h1 className=\"project-title\">Here are some of the things I have worked/am working on...</h1>\n            <Grid container>\n                <Grid xs={3} className={\"grid-options\"}>\n                    <Card className=\"card card-left\">\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                Downloader XL\n                            </Typography>\n                            <Typography variant=\"body2\" className=\"text\" component=\"p\">\n                                A youtube downloader that not only downloads the song, but will search and add the album\n                                cover and metadata to the song.\n                            </Typography>\n                        </CardContent>\n                        <CardActions>\n                            <Button disableRipple variant=\"outlined\" href=\"https://github.com/devmarcy/downloader-xl\"\n                                    size=\"large\" className=\"bcolor\">\n                                Github\n                            </Button>\n                        </CardActions>\n                    </Card>\n\n                </Grid>\n                <Grid xs={3} className={\"grid-options\"}>\n                    <Card className=\"card card-left\">\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                forecast\n                            </Typography>\n                            <Typography variant=\"body2\" className=\"text\" component=\"p\">\n                                A python program that outputs the weather forecast.\n                            </Typography>\n                        </CardContent>\n                        <CardActions>\n                            <Button disableRipple variant=\"outlined\" href=\"https://github.com/devmarcy/forecast\" size=\"large\" className=\"bcolor\">\n                                Github\n                            </Button>\n                        </CardActions>\n                    </Card>\n\n                </Grid>\n            </Grid>\n        </ScrollAnimation>\n    </div>\n);\nexport default Projects;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ScrollAnimation from 'react-animate-on-scroll';\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport '../css/landing-info.css';\nimport Typing from \"react-typing-animation\";\n\nconst LandingInfo = () => (\n    <div className=\"landing-screen\" style={{width: '100%', margin: 'auto'}}>\n        {/*Landing information*/}\n        <br/>\n        <br/>\n        <ScrollAnimation animateIn='fadeInDown' animateOut='fadeOutUp'>\n            <Grid xs={12}>\n                <img src=\"https://avatars0.githubusercontent.com/u/48325651?s=460&v=4\" alt=\"avatar\"\n                     className=\"avatar\"/>\n                <br/>\n            </Grid>\n            <Grid className=\"position\">\n                <Grid xs={3}/>\n                <Grid xs={6} className=\"info-box-cell\">\n                    <br/>\n                    <Typing cursorClassName=\"cursor\">\n                        <h2>Marcel Mendes</h2>\n                        <Typing.Speed ms={25}/>\n                        <h2>Student at Loughborough University</h2>\n                    </Typing>\n\n                    <div className=\"icons-social-media\">\n                        <a href=\"https://github.com/devmarcy\">\n                            <i className=\"fab fa-github fa-3x fa-fw\"/>\n                        </a>\n                        <a href=\"https://stackoverflow.com/users/11452576/devmarcy\">\n                            <i className=\"fab fa-stack-overflow fa-3x fa-fw\"/>\n                        </a>\n                        <a href=\"https://www.linkedin.com/in/marcelmendes17\">\n                            <i className=\"fab fa-linkedin fa-3x fa-fw\"/>\n                        </a>\n                        <a href=\"mailto:marcelmendes@hotmail.co.uk\">\n                            <i className=\"fas fa-at fa-3x fa-fw\"/>\n                        </a>\n                    </div>\n                    <p> | Python | Java | HTML | Javascript | CSS | PHP |</p>\n                    <br/>\n                </Grid>\n                <Grid xs={3}/>\n            </Grid>\n        </ScrollAnimation>\n    </div>\n);\nexport default LandingInfo;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport AboutMe from './js/aboutme.js'\nimport ElevationScroll from './js/elevationScroll.js'\nimport Projects from './js/projects.js'\nimport * as serviceWorker from './serviceWorker';\nimport LandingInfo from \"./js/landing-info\";\n\n\nReactDOM.render(<ElevationScroll />, document.getElementById('elevation-scroll'));\nReactDOM.render(<LandingInfo />,document.getElementById('landing-info'));\nReactDOM.render(<AboutMe />, document.getElementById('about-me'));\nReactDOM.render(<Projects />, document.getElementById('projects'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}